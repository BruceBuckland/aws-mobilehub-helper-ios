The AWS iOS Mobile Hub Helper provides a helper library written on top of AWS iOS SDK for developers to build connected applications for iPad, iPhone, or iPod touch devices using Amazon Web Services. It provides multiple utilities which are descibed in this API Reference. It also includes code snippets describing how to use the functions available in framework.

It is recommended that you configure your project through AWS Mobile Hub for appropriate configuration and settings for using the below utilities.

#Identity
Identity in Mobile Hub Helper is managed by AWSIdentityManager.  This is a singleton that is initialized the first time you access the AWSIdentityManager.defaultIdentityManager().  AWSIdentityManager is responsible for providing credentials for AWS managing both authenticated and unauthenticated identityId's. AWSIdentityManager does this with helpers that conform to the protocol AWSSignInProvider.  AWSSignInProviders are provided for Google+ and Facebook. You can write your own AWSSignInProvider, and there is at least one (for Cognito User Pools AWSCUPIdPSignInProvider.swift, included in this repository but not linked (because swift can't make a static library, so you would need to copy it into your project.). If you configure an your identity provider in Info.plist, it will be included as a possible sign in source.  It is your responsibility to manage the user interface to collect username password, or link to a web site that does, for each AWSSignInProvider you want to use.

The AWSSignInProvider's are singletons, and you simply reference them to instantiate them. For all functions related to logging in, logging out, and identityId's you use AWSIdentityManager to call the AWSSignInProvider.  AWSIdentityManager also returns the "friendly" name of the provider (via providerKey) and the friendly name of the current signInProvider (via authenticatedBy)

All of the AWSSignInProviders have methods for token (return a (usually openId)) token and identityProviderName. For AWSCUPIdPSignInProvider there are and for developer identitys there may be other methods available, for instance SignUp, Forgot password, update attributes, etc.  
The Mobile Hub configures it's project using AWSMobileClient from AppDelegate.  For identity, AWSMobileClient instantiates AWSIdentityManager.defaultIdentityManager() and calls interceptApplication which restarts any sessions that were active when the app was last run or simply returns with no active sessions and no active SignInProvider.

At any point you can request login from AWSIdentityManager specifiying an AWSsignInProvider.  In the case of AWSCUPIdPSignInProvider you have to pre-populate the username and password properties directly in the signInProvider (AWSIdentityManager does not yet provide that capability). 
